# configuration file for git-cliff (0.1.0)

# Heavily adapted from N3N template

# There will be certain changes that will make future CHANGELOG.md
# release formatted differently.

[changelog]
# changelog header
header = """
# Changelog

All notable changes to this project will be documented in this file.

The format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),
and this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\n
"""
# template for the changelog body
# https://tera.netlify.app/docs/#introduction
body = """
{% if version %}\
    ## [{{ version | trim_start_matches(pat="v") }}] - {{ timestamp | date(format="%Y-%m-%d") }}

    {% if previous %}\
        {% if previous.commit_id %}\
        [{{ version | trim_start_matches(pat="v") }}]: ../../../compare/{{ previous.commit_id }}...{{ commit_id }}
        {% else %}\
        [{{ version | trim_start_matches(pat="v") }}]: ../../../releases/tag/v{{ version | trim_start_matches(pat="v") }}
        {% endif %}\
    {% endif %}\
{% else %}\
    ## [unreleased]

    [unreleased]: ../../../compare/{{ commit_id }}...HEAD
{% endif %}\
{% for group, commits in commits | group_by(attribute="group") %}
    ### {{ group | upper_first }}
    {% for commit in commits
    | filter(attribute="scope")
    | sort(attribute="scope") %}
        - *{{commit.scope}}:* {{ commit.message | upper_first }} ([{{ commit.id | truncate(length=7, end="") }}]({{ commit.id }}))\
        {%- if commit.breaking %}
        {% raw %}  {% endraw %}- **BREAKING**: {{commit.breaking_description}}
        {%- endif -%}
    {%- endfor -%}
    {%- for commit in commits %}
        {%- if commit.scope -%}
        {% else -%}
            - *unclassified:* {{ commit.message | upper_first }} ([{{ commit.id | truncate(length=7, end="") }}]({{ commit.id }}))\
            {% if commit.breaking -%}
            {% raw %}  {% endraw %}- **BREAKING**: {{commit.breaking_description}}
            {% endif -%}
        {% endif -%}
    {% endfor %}
{% endfor %}
<!-- CHANGELOG SPLIT MARKER -->\n
"""
# remove the leading and trailing whitespaces from the template
trim = true
# changelog footer
footer = """
"""


[git]
# allow only conventional commits
# https://www.conventionalcommits.org
conventional_commits = true
# regex for parsing and grouping commits
commit_parsers = [
    { message = "^new\\(release\\): prepare for", skip = true},
    { message = "^new", group = "Features"},
    { message = "^fix", group = "Bug Fixes"},
    { message = "^doc", group = "Documentation"},
    { message = "^imp", group = "Improvements"},
    { message = "^upd", group = "Refactoring Updates"},
    { message = "^fmt", group = "Styling"},
    { message = "^chk", group = "Test Checks"},
    { message = "^ext", group = "Extra Tasks"},
    { body = ".*security", group = "Security"},
]
# filter out the commits that are not matched by commit parsers
filter_commits = false
# glob pattern for matching git tags
tag_pattern = "v[0-9]*"
# regex for skipping tags
skip_tags = "v0.1.0-beta.1"
